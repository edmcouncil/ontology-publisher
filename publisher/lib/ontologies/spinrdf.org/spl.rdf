<?xml version="1.0"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:afn="http://jena.hpl.hp.com/ARQ/function#"
    xmlns:spin="http://spinrdf.org/spin#"
    xmlns:fn="http://www.w3.org/2005/xpath-functions#"
    xmlns:sp="http://spinrdf.org/sp#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:spl="http://spinrdf.org/spl#"
  xml:base="http://spinrdf.org/spl">
  <owl:Ontology rdf:about="">
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >1.3.0</owl:versionInfo>
    <owl:imports rdf:resource="http://spinrdf.org/spin"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SPIN Standard Library</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A collection of generally useful SPARQL functions (expressed as SPIN functions), and SPIN templates. Also provides a top-level classification of functions, and definitions of the standard SPARQL functions.</rdfs:comment>
    <rdf:type rdf:resource="http://spinrdf.org/spin#LibraryOntology"/>
  </owl:Ontology>
  <rdfs:Class rdf:ID="ConstraintTemplate">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplate"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Constraint template</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Metaclass for CONSTRUCT templates that create spin:ConstraintViolations and can be used as values of spin:constraint.</rdfs:comment>
  </rdfs:Class>
  <rdfs:Class rdf:ID="TestCase">
    <rdfs:subClassOf rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Test case</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A test to verify that a SPIN function or magic property works as expected, and to generate documentation of example uses of the function. Each TestCase consists of a SPARQL function call or an expression that can be executed with spin:eval, and an expected result. The test framework only needs to execute spin:eval on the expression and compare it with the expected result.</rdfs:comment>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The test expression or SELECT query (anything that can be evaluated with spin:eval).</rdfs:comment>
        <spl:predicate>
          <rdf:Property rdf:ID="testExpression"/>
        </spl:predicate>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The expected result of the test case, or nothing to indicate that an error is expected.</rdfs:comment>
        <spl:predicate>
          <rdf:Property rdf:ID="testResult"/>
        </spl:predicate>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
  </rdfs:Class>
  <rdfs:Class rdf:ID="UnionTemplate">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Template"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Union template</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >This type can be used for templates that serve as the union (or "collector") of other templates. Union templates differ from other templates in that all spl:Arguments are optional. This means that union templates can be declared as subclasses of multiple other templates, yet when instantiated, only some of the arguments defined by the superclasses need to be filled in.</rdfs:comment>
  </rdfs:Class>
  <rdf:Property rdf:ID="instance">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >instance</rdfs:label>
    <rdfs:domain rdf:resource="http://spinrdf.org/sp#ModuleCall"/>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#property">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:ID="class">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >class</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:ID="count">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >count</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:about="#testExpression">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >test expression</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:ID="minCount">
    <rdfs:subPropertyOf rdf:resource="#count"/>
  </rdf:Property>
  <rdf:Property rdf:ID="valueType">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >value type</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:ID="maxCount">
    <rdfs:subPropertyOf rdf:resource="#count"/>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#max">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#maxCount">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:about="#testResult">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >testResult</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:ID="predicate">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >predicate</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#minCount">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#min">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:ID="defaultValue">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >default value</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:ID="optional">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
    <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >optional</rdfs:label>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#pattern">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <rdf:Property rdf:about="http://spinrdf.org/arg#otherProperty">
    <rdfs:subPropertyOf rdf:resource="http://spinrdf.org/sp#arg"/>
  </rdf:Property>
  <spin:SelectTemplate rdf:ID="SPINOverview">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#SelectTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SPIN Overview</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Finds all constraints and rules attached to classes in the current graph, using spin:constraint, spin:constructor, spin:rule or their sub-properties. The result set will contain the associated class, the predicate, and the SPIN rule.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SPIN Overview</spin:labelTemplate>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
            <rdf:first>
              <sp:Union>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                    <rdf:first>
                      <sp:Bind>
                        <sp:variable rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >bp</sp:varName>
                        </sp:variable>
                        <sp:expression rdf:resource="http://spinrdf.org/spin#constraint"/>
                      </sp:Bind>
                    </rdf:first>
                  </rdf:Description>
                  <rdf:Description>
                    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                    <rdf:first>
                      <sp:Bind>
                        <sp:variable rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >bp</sp:varName>
                        </sp:variable>
                        <sp:expression rdf:resource="http://spinrdf.org/spin#constructor"/>
                      </sp:Bind>
                    </rdf:first>
                  </rdf:Description>
                  <rdf:Description>
                    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                    <rdf:first>
                      <sp:Bind>
                        <sp:variable rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >bp</sp:varName>
                        </sp:variable>
                        <sp:expression rdf:resource="http://spinrdf.org/spin#rule"/>
                      </sp:Bind>
                    </rdf:first>
                  </rdf:Description>
                </sp:elements>
              </sp:Union>
            </rdf:first>
          </rdf:Description>
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >bp</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >class</sp:varName>
            </sp:subject>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >rule</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Filter>
            <sp:expression>
              <sp:ne>
                <sp:arg2 rdf:resource="http://spinrdf.org/spin#Modules"/>
                <sp:arg1 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >class</sp:varName>
                </sp:arg1>
              </sp:ne>
            </sp:expression>
          </sp:Filter>
          <sp:Filter>
            <sp:expression>
              <sp:notExists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >rule</sp:varName>
                    </sp:subject>
                    <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                    <sp:object>
                      <spin:ConstructTemplate rdf:ID="Argument">
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >the property holding the values of each function call</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
                            <spl:predicate rdf:resource="#predicate"/>
                          </spl:Argument>
                        </spin:constraint>
                        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >Provides metadata about an argument of a SPIN Function or Template. Arguments wrap a given rdf:Property (predicate) and specify its value type and whether the argument is optional. When used as spin:constraint, the body of this template will verify that a non-optional value exists and that it has the specified value type. Arguments that have been declared spl:optional true become optional if the type of ?this is spl:UnionTemplate. </rdfs:comment>
                        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >Argument</rdfs:label>
                        <spin:body>
                          <sp:Construct>
                            <sp:where rdf:parseType="Collection">
                              <rdf:Description>
                                <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                                <rdf:first>
                                  <sp:Filter>
                                    <sp:expression>
                                      <sp:isIRI>
                                        <sp:arg1 rdf:resource="http://spinrdf.org/spin#_this"/>
                                      </sp:isIRI>
                                    </sp:expression>
                                  </sp:Filter>
                                </rdf:first>
                              </rdf:Description>
                              <sp:Union>
                                <sp:elements rdf:parseType="Collection">
                                  <rdf:Description>
                                    <rdf:rest rdf:parseType="Collection">
                                      <sp:Bind>
                                        <sp:variable rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >label</sp:varName>
                                        </sp:variable>
                                        <sp:expression>
                                          <sp:concat>
                                            <sp:arg2>
                                              <afn:localname>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >predicate</sp:varName>
                                                </sp:arg1>
                                              </afn:localname>
                                            </sp:arg2>
                                            <sp:arg1>Missing value for argument </sp:arg1>
                                          </sp:concat>
                                        </sp:expression>
                                      </sp:Bind>
                                    </rdf:rest>
                                    <rdf:first rdf:parseType="Collection">
                                      <rdf:Description>
                                        <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                                        <rdf:first>
                                          <sp:Filter>
                                            <sp:expression>
                                              <sp:or>
                                                <sp:arg2>
                                                  <sp:eq>
                                                    <sp:arg2 rdf:datatype=
                                                    "http://www.w3.org/2001/XMLSchema#boolean"
                                                    >false</sp:arg2>
                                                    <sp:arg1 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >optional</sp:varName>
                                                    </sp:arg1>
                                                  </sp:eq>
                                                </sp:arg2>
                                                <sp:arg1>
                                                  <sp:not>
                                                    <sp:arg1>
                                                      <sp:bound>
                                                        <sp:arg1 rdf:parseType="Resource">
                                                          <sp:varName
                                                           rdf:datatype=
                                                          "http://www.w3.org/2001/XMLSchema#string"
                                                          >optional</sp:varName>
                                                        </sp:arg1>
                                                      </sp:bound>
                                                    </sp:arg1>
                                                  </sp:not>
                                                </sp:arg1>
                                              </sp:or>
                                            </sp:expression>
                                          </sp:Filter>
                                        </rdf:first>
                                      </rdf:Description>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:notExists>
                                            <sp:elements rdf:parseType="Collection">
                                              <rdf:Description>
                                                <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                                                <sp:predicate rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >predicate</sp:varName>
                                                </sp:predicate>
                                                <sp:object rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >value</sp:varName>
                                                </sp:object>
                                              </rdf:Description>
                                            </sp:elements>
                                          </sp:notExists>
                                        </sp:expression>
                                      </sp:Filter>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:notExists>
                                            <sp:elements rdf:parseType="Collection">
                                              <rdf:Description>
                                                <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                                                <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                                                <sp:object rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >template</sp:varName>
                                                </sp:object>
                                              </rdf:Description>
                                              <sp:Filter>
                                                <sp:expression>
                                                  <spl:instanceOf>
                                                    <sp:arg2 rdf:resource="#UnionTemplate"/>
                                                    <sp:arg1 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >template</sp:varName>
                                                    </sp:arg1>
                                                  </spl:instanceOf>
                                                </sp:expression>
                                              </sp:Filter>
                                            </sp:elements>
                                          </sp:notExists>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:first>
                                  </rdf:Description>
                                  <rdf:Description>
                                    <rdf:rest rdf:parseType="Collection">
                                      <sp:Bind>
                                        <sp:variable rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >label</sp:varName>
                                        </sp:variable>
                                        <sp:expression>
                                          <sp:concat>
                                            <sp:arg5>)</sp:arg5>
                                            <sp:arg4>
                                              <afn:localname>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >valueType</sp:varName>
                                                </sp:arg1>
                                              </afn:localname>
                                            </sp:arg4>
                                            <sp:arg3> (expected: </sp:arg3>
                                            <sp:arg2>
                                              <afn:localname>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >predicate</sp:varName>
                                                </sp:arg1>
                                              </afn:localname>
                                            </sp:arg2>
                                            <sp:arg1>Incorrect type of argument </sp:arg1>
                                          </sp:concat>
                                        </sp:expression>
                                      </sp:Bind>
                                    </rdf:rest>
                                    <rdf:first rdf:parseType="Collection">
                                      <rdf:Description>
                                        <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                                        <rdf:first>
                                          <sp:Filter>
                                            <sp:expression>
                                              <sp:bound>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >valueType</sp:varName>
                                                </sp:arg1>
                                              </sp:bound>
                                            </sp:expression>
                                          </sp:Filter>
                                        </rdf:first>
                                      </rdf:Description>
                                      <rdf:Description>
                                        <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                                        <sp:predicate rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >predicate</sp:varName>
                                        </sp:predicate>
                                        <sp:object rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >value</sp:varName>
                                        </sp:object>
                                      </rdf:Description>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:and>
                                            <sp:arg2>
                                              <sp:or>
                                                <sp:arg2>
                                                  <sp:isLiteral>
                                                    <sp:arg1 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >value</sp:varName>
                                                    </sp:arg1>
                                                  </sp:isLiteral>
                                                </sp:arg2>
                                                <sp:arg1>
                                                  <sp:ne>
                                                    <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
                                                    <sp:arg1 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >valueType</sp:varName>
                                                    </sp:arg1>
                                                  </sp:ne>
                                                </sp:arg1>
                                              </sp:or>
                                            </sp:arg2>
                                            <sp:arg1>
                                              <sp:not>
                                                <sp:arg1>
                                                  <spl:instanceOf>
                                                    <sp:arg2 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >valueType</sp:varName>
                                                    </sp:arg2>
                                                    <sp:arg1 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >value</sp:varName>
                                                    </sp:arg1>
                                                  </spl:instanceOf>
                                                </sp:arg1>
                                              </sp:not>
                                            </sp:arg1>
                                          </sp:and>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:first>
                                  </rdf:Description>
                                </sp:elements>
                              </sp:Union>
                            </sp:where>
                            <sp:templates rdf:parseType="Collection">
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A0"/>
                                <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                                <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
                              </rdf:Description>
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A0"/>
                                <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
                                <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
                              </rdf:Description>
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A0"/>
                                <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
                                <sp:object rdf:parseType="Resource">
                                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                                  >predicate</sp:varName>
                                </sp:object>
                              </rdf:Description>
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A0"/>
                                <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
                                <sp:object rdf:parseType="Resource">
                                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                                  >label</sp:varName>
                                </sp:object>
                              </rdf:Description>
                            </sp:templates>
                          </sp:Construct>
                        </spin:body>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >indicates whether the argument is optional</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
                            <spl:predicate rdf:resource="#optional"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >the default value for the argument</rdfs:comment>
                            <spl:predicate rdf:resource="#defaultValue"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >Argument {?predicate} : {?valueType}</spin:labelTemplate>
                        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplates"/>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >the value type of the argument</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
                            <spl:predicate rdf:resource="#valueType"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                            >a comment describing the argument</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
                            <spl:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#comment"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                      </spin:ConstructTemplate>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:notExists>
            </sp:expression>
          </sp:Filter>
          <sp:Filter>
            <sp:expression>
              <sp:notExists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >rule</sp:varName>
                    </sp:subject>
                    <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                    <sp:object>
                      <spin:ConstructTemplate rdf:ID="Attribute">
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>the default value of the attribute</rdfs:comment>
                            <spl:predicate rdf:resource="#defaultValue"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <rdfs:comment>Defines an "attribute" of a class. Attribute definitions bundle common modeling patterns known from object-oriented languages like UML. Each attribute can have min and max cardinality, a value type and a default value. The attribute links a class with one RDF property. This template should be used as spin:constraints on a class to make sure that classes meet the expected cardinalities and valueType constraints.
If a model wants to use spl:defaultValue, then it should instantiate the spl:ConstructDefaultValues as a spin:constructor at some root class, such as rdfs:Resource.</rdfs:comment>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>a comment describing the meaning of this attribute</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
                            <spl:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#comment"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplates"/>
                        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >Attribute</rdfs:label>
                        <spin:body>
                          <sp:Construct>
                            <sp:where rdf:parseType="Collection">
                              <sp:Union>
                                <sp:elements rdf:parseType="Collection">
                                  <rdf:Description>
                                    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                                    <rdf:first>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:and>
                                            <sp:arg2>
                                              <sp:lt>
                                                <sp:arg2 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >minCount</sp:varName>
                                                </sp:arg2>
                                                <sp:arg1>
                                                  <spl:objectCount>
                                                    <sp:arg2 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >predicate</sp:varName>
                                                    </sp:arg2>
                                                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_this"/>
                                                  </spl:objectCount>
                                                </sp:arg1>
                                              </sp:lt>
                                            </sp:arg2>
                                            <sp:arg1>
                                              <sp:bound>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >minCount</sp:varName>
                                                </sp:arg1>
                                              </sp:bound>
                                            </sp:arg1>
                                          </sp:and>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:first>
                                  </rdf:Description>
                                  <rdf:Description>
                                    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                                    <rdf:first>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:and>
                                            <sp:arg2>
                                              <sp:gt>
                                                <sp:arg2 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >maxCount</sp:varName>
                                                </sp:arg2>
                                                <sp:arg1>
                                                  <spl:objectCount>
                                                    <sp:arg2 rdf:parseType="Resource">
                                                      <sp:varName
                                                       rdf:datatype=
                                                      "http://www.w3.org/2001/XMLSchema#string"
                                                      >predicate</sp:varName>
                                                    </sp:arg2>
                                                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_this"/>
                                                  </spl:objectCount>
                                                </sp:arg1>
                                              </sp:gt>
                                            </sp:arg2>
                                            <sp:arg1>
                                              <sp:bound>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >maxCount</sp:varName>
                                                </sp:arg1>
                                              </sp:bound>
                                            </sp:arg1>
                                          </sp:and>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:first>
                                  </rdf:Description>
                                  <rdf:Description>
                                    <rdf:rest rdf:parseType="Collection">
                                      <rdf:Description>
                                        <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                                        <sp:predicate rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >predicate</sp:varName>
                                        </sp:predicate>
                                        <sp:object rdf:parseType="Resource">
                                          <sp:varName rdf:datatype=
                                          "http://www.w3.org/2001/XMLSchema#string"
                                          >value</sp:varName>
                                        </sp:object>
                                      </rdf:Description>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:not>
                                            <sp:arg1>
                                              <spl:instanceOf>
                                                <sp:arg2 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >valueType</sp:varName>
                                                </sp:arg2>
                                                <sp:arg1 rdf:parseType="Resource">
                                                  <sp:varName
                                                   rdf:datatype=
                                                  "http://www.w3.org/2001/XMLSchema#string"
                                                  >value</sp:varName>
                                                </sp:arg1>
                                              </spl:instanceOf>
                                            </sp:arg1>
                                          </sp:not>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:rest>
                                    <rdf:first>
                                      <sp:Filter>
                                        <sp:expression>
                                          <sp:bound>
                                            <sp:arg1 rdf:parseType="Resource">
                                              <sp:varName rdf:datatype=
                                              "http://www.w3.org/2001/XMLSchema#string"
                                              >valueType</sp:varName>
                                            </sp:arg1>
                                          </sp:bound>
                                        </sp:expression>
                                      </sp:Filter>
                                    </rdf:first>
                                  </rdf:Description>
                                </sp:elements>
                              </sp:Union>
                            </sp:where>
                            <sp:templates rdf:parseType="Collection">
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A1"/>
                                <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                                <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
                              </rdf:Description>
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A1"/>
                                <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
                                <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
                              </rdf:Description>
                              <rdf:Description>
                                <sp:subject rdf:nodeID="A1"/>
                                <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
                                <sp:object rdf:parseType="Resource">
                                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                                  >predicate</sp:varName>
                                </sp:object>
                              </rdf:Description>
                            </sp:templates>
                          </sp:Construct>
                        </spin:body>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>the maximum number of values permitted for the property</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
                            <spl:predicate rdf:resource="#maxCount"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >Attribute {?predicate} : {?valueType} [{?minCount},{?maxCount}]</spin:labelTemplate>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>the RDF property holding the attribute value</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
                            <spl:predicate rdf:resource="#predicate"/>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>the type that all values of the property must have</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
                            <spl:predicate rdf:resource="#valueType"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                        <spin:constraint>
                          <spl:Argument>
                            <rdfs:comment>the minimum number of values permitted for the property</rdfs:comment>
                            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
                            <spl:predicate rdf:resource="#minCount"/>
                            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
                            >true</spl:optional>
                          </spl:Argument>
                        </spin:constraint>
                      </spin:ConstructTemplate>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:notExists>
            </sp:expression>
          </sp:Filter>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >class</sp:varName>
          </rdf:Description>
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >property</sp:varName>
          </rdf:Description>
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >rule</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:SelectTemplate>
  <spl:TestCase rdf:ID="Test-instanceOf-rdfsClassInheritance">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <sp:arg1 rdf:resource="http://www.w3.org/2002/07/owl#Restriction"/>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:MagicProperty rdf:ID="relevantPropertyAtClass">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#MagicProperties"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >relevant property at class</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A magic property that establishes a relationship between properties (left) and classes (right) to determine which properties are "relevant" for the class. Relevant means that they have the class in their domain and/or restrictions, including superclasses and sub-properties (unless they define their own domain). Domains consisting of an owl:unionOf are also handled.

Note that the performance of the body of this magic property has been optimized for the case in which the class is given, so ideally use this for queries such as  ?property spl:relevantPropertyAtClass skos:Concept .</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The property.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >class</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >superClass</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <sp:Union>
            <sp:elements rdf:parseType="Collection">
              <rdf:Description>
                <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                <rdf:first rdf:parseType="Resource">
                  <sp:subject rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >property</sp:varName>
                  </sp:subject>
                  <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#domain"/>
                  <sp:object rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >superClass</sp:varName>
                  </sp:object>
                </rdf:first>
              </rdf:Description>
              <rdf:Description>
                <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
                <rdf:first rdf:parseType="Resource">
                  <sp:subject rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >superClass</sp:varName>
                  </sp:subject>
                  <sp:predicate rdf:resource="http://www.w3.org/2002/07/owl#onProperty"/>
                  <sp:object rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >property</sp:varName>
                  </sp:object>
                </rdf:first>
              </rdf:Description>
              <rdf:Description>
                <rdf:rest rdf:parseType="Collection">
                  <sp:TriplePath>
                    <sp:subject rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >list</sp:varName>
                    </sp:subject>
                    <sp:path>
                      <sp:ModPath>
                        <sp:subPath rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"/>
                        <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                        >0</sp:modMin>
                        <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                        >-2</sp:modMax>
                      </sp:ModPath>
                    </sp:path>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >listSegment</sp:varName>
                    </sp:object>
                  </sp:TriplePath>
                  <sp:TriplePath>
                    <sp:subject rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >property</sp:varName>
                    </sp:subject>
                    <sp:path>
                      <sp:SeqPath>
                        <sp:path2 rdf:resource="http://www.w3.org/2002/07/owl#unionOf"/>
                        <sp:path1 rdf:resource="http://www.w3.org/2000/01/rdf-schema#domain"/>
                      </sp:SeqPath>
                    </sp:path>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >list</sp:varName>
                    </sp:object>
                  </sp:TriplePath>
                </rdf:rest>
                <rdf:first rdf:parseType="Resource">
                  <sp:subject rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >listSegment</sp:varName>
                  </sp:subject>
                  <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#first"/>
                  <sp:object rdf:parseType="Resource">
                    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                    >superClass</sp:varName>
                  </sp:object>
                </rdf:first>
              </rdf:Description>
            </sp:elements>
          </sp:Union>
          <sp:TriplePath>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <sp:Filter>
            <sp:expression>
              <sp:or>
                <sp:arg2>
                  <sp:notExists>
                    <sp:elements rdf:parseType="Collection">
                      <rdf:Description>
                        <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
                        <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#domain"/>
                        <sp:object rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >anyDomain</sp:varName>
                        </sp:object>
                      </rdf:Description>
                    </sp:elements>
                  </sp:notExists>
                </sp:arg2>
                <sp:arg1>
                  <sp:eq>
                    <sp:arg2 rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >property</sp:varName>
                    </sp:arg2>
                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                  </sp:eq>
                </sp:arg1>
              </sp:or>
            </sp:expression>
          </sp:Filter>
          <sp:Filter>
            <sp:expression>
              <sp:isIRI>
                <sp:arg1 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >class</sp:varName>
                </sp:arg1>
              </sp:isIRI>
            </sp:expression>
          </sp:Filter>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >class</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
        <sp:distinct rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</sp:distinct>
      </sp:Select>
    </spin:body>
  </spin:MagicProperty>
  <spin:ConstructTemplate rdf:ID="InferDefaultValue">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Infer default value</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Can be used to infer default values for a given subject/predicate combination. This is typically assigned as spin:rule to a class. If ?this does not already have a value for a given property {?predicate}, then this will infer the value {?defaultValue}.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Default value for {?predicate}: {?defaultValue}</spin:labelTemplate>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The predicate to infer the default value of.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="#predicate"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The default value to infer.</rdfs:comment>
        <spl:predicate rdf:resource="#defaultValue"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <sp:Optional>
            <sp:elements rdf:parseType="Collection">
              <rdf:Description>
                <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                <sp:predicate rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >predicate</sp:varName>
                </sp:predicate>
                <sp:object rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >anyValue</sp:varName>
                </sp:object>
              </rdf:Description>
            </sp:elements>
          </sp:Optional>
          <sp:Filter>
            <sp:expression>
              <sp:not>
                <sp:arg1>
                  <sp:bound>
                    <sp:arg1 rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >anyValue</sp:varName>
                    </sp:arg1>
                  </sp:bound>
                </sp:arg1>
              </sp:not>
            </sp:expression>
          </sp:Filter>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >predicate</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >defaultValue</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spin:ConstructTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#coalesce">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="MiscFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Misc functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions that are difficult to categorize.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COALESCE</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Takes any number of arguments, and returns the first bound argument, starting at the left.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >COALESCE</spin:symbol>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#rand">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="MathematicalFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Mathematical functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions operating on numbers.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#idp3722352"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >rand</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns a number between 0 (inclusive) and 1.0e0 (exclusive). Different numbers can be produced every time this function is invoked. Numbers should be produced with approximately equal probability.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >RAND</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#double"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#year">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="DateFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Date functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions that operate on date/time literals.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >year</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the year from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >year</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The date or dateTime argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="objectInGraph">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="OntologyFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Ontology functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions performing ontology-related operations.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >object in graph</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the object of a given subject (?arg1) / predicate (?arg2) combination in a given graph ?arg3. Note that if multiple values are present then the result might be unpredictably random.</rdfs:comment>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The graph to query in.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The predicate to get the object of.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The subject to get the object from.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:NamedGraph>
            <sp:graphNameNode rdf:resource="http://spinrdf.org/spin#_arg3"/>
            <sp:elements rdf:parseType="Collection">
              <rdf:Description>
                <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
                <sp:predicate rdf:resource="http://spinrdf.org/spin#_arg2"/>
                <sp:object rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >object</sp:varName>
                </sp:object>
              </rdf:Description>
            </sp:elements>
          </sp:NamedGraph>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >object</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#round">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-round"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >round</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the number with no fractional part that is closest to the argument. If there are two such numbers, then the one that is closest to positive infinity is returned. An error is raised if ?arg1 is not a numeric value.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >round</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The number to round.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#strlen">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="StringFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >String functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions that return strings.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-strlen"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strlen</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Computes the length of a given input string.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRLEN</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-instanceOf-untypedString">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <sp:arg1>test</sp:arg1>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#strends">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-ends"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strends</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns true if the lexical form of ?arg1 ends with the lexical form of ?arg2, otherwise it returns false.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRENDS</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The sub-string that the input string is supposed to end with.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="hasValueOfType">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="BooleanFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Boolean functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions that return a boolean value (true or false).</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >hasValueOfType</rdfs:label>
    <rdfs:comment>Checks whether a given subject (?arg1) has at least one value of a given type (?arg3) for a given property (?arg2) or one of its sub-properties.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the type to match against</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the expected property</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the subject that is expected to have the value</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >p</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >p</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >value</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Filter>
            <sp:expression>
              <spl:instanceOf>
                <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg3"/>
                <sp:arg1 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >value</sp:varName>
                </sp:arg1>
              </spl:instanceOf>
            </sp:expression>
          </sp:Filter>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <spin:SelectTemplate rdf:ID="AllArguments">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#SelectTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >All arguments</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets a list of all spl:Arguments declared at a given class and its superclasses.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >All spl:Arguments of {?class}</spin:labelTemplate>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The class to get the arguments of.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <spl:predicate rdf:resource="#class"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >class</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >atClass</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >atClass</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#constraint"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >arg</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >arg</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="#Argument"/>
          </rdf:Description>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >arg</sp:varName>
          </rdf:Description>
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >atClass</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:SelectTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#sha1">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-sha1"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sha1</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the SHA1 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SHA1</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input literal.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="RegexPropertyConstraint">
    <rdfs:subClassOf>
      <spl:ConstraintTemplate rdf:ID="PropertyConstraintTemplates">
        <rdfs:subClassOf>
          <spl:ConstraintTemplate rdf:ID="ConstraintTemplates">
            <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplates"/>
            <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Constraint templates</rdfs:label>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >Abstract superclass of templates that can be used as spin:constraints. The subclasses are expected to construct spin:ConstraintViolations and use ?this to talk about the instances of the associated class.</rdfs:comment>
            <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
            >true</spin:abstract>
          </spl:ConstraintTemplate>
        </rdfs:subClassOf>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Property constraint templates</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Abstract superclass of constraint templates that constrain exactly one property.</rdfs:comment>
        <spin:constraint>
          <spl:Argument>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >The property being constrained.</rdfs:comment>
            <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
            <spl:predicate rdf:resource="http://spinrdf.org/arg#property"/>
          </spl:Argument>
        </spin:constraint>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spl:ConstraintTemplate>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Regex property constraint</rdfs:label>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Values of {?property} must match the regular expression {?pattern}</spin:labelTemplate>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The regular expression to match.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/arg#pattern"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >object</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Filter>
            <sp:expression>
              <sp:not>
                <sp:arg1>
                  <sp:regex>
                    <sp:arg2 rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >pattern</sp:varName>
                    </sp:arg2>
                    <sp:arg1>
                      <xsd:string>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >object</sp:varName>
                        </sp:arg1>
                      </xsd:string>
                    </sp:arg1>
                  </sp:regex>
                </sp:arg1>
              </sp:not>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg5>"</sp:arg5>
                <sp:arg4 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >pattern</sp:varName>
                </sp:arg4>
                <sp:arg3> must match the regular expression "</sp:arg3>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >object</sp:varName>
                </sp:arg2>
                <sp:arg1>Value </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A2"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A2"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A2"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A2"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spl:ConstraintTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#tz">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-tz"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >tz</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the timezone part of ?arg1 as a simple literal. Returns the empty string if there is no timezone.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TZ</spin:symbol>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#now">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >now</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the current date and time as an xsd:dateTime literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >now</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-instanceOf-lingualString">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <sp:arg1 xml:lang="en">test</sp:arg1>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spl:TestCase rdf:ID="Test-object-noValue">
    <spl:testExpression>
      <spl:object>
        <sp:arg2 rdf:resource="http://www.w3.org/2002/07/owl#versionInfo"/>
        <sp:arg1 rdf:resource="http://www.w3.org/2002/07/owl#versionInfo"/>
      </spl:object>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#str">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >str</rdfs:label>
    <rdfs:comment>Returns the lexical form of ?arg1 (a literal); returns the codepoint representation of ?arg1 (an IRI). This is useful for examining parts of an IRI, for instance, the host-name.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >str</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the node to convert to string</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#ceil">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-ceil"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ceil</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the smallest (closest to negative infinity) number with no fractional part that is not less than the value of arg. An error is raised if ?arg1 is not a numeric value.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ceil</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The number to get the ceiling of.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="hasValue">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >hasValue</rdfs:label>
    <rdfs:comment>Checks whether a given resource (?arg1) has a given value (?arg3) for a given property (?arg2) or one of the sub-properties of it.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the expected value</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the property that is expected to hold the value</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the subject that is expected to have the value</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >p</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >p</sp:varName>
            </sp:predicate>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg3"/>
          </rdf:Description>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#floor">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-floor"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >floor</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the largest (closest to positive infinity) number with no fractional part that is not greater than the value of ?arg1. An error is raised if ?arg1 is not a numeric value.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >floor</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The value to get the floor of.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#timezone">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-timezone"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >timezone</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the timezone part of ?arg1 as an xsd:dayTimeDuration. Raises an error if there is no timezone.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TIMEZONE</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#duration"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input time.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#dateTime"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#in">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IN</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Checks whether the value on the left (?arg1) is one of the values on the right (?arg2, ?arg3 ...).</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IN</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The value to find.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#strstarts">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-starts"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strstarts</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns true if the lexical form of ?arg1 begins with the lexical form of ?arg2, otherwise it returns false.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRSTARTS</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The sub-string that the input string is supposed to begin with.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#ge">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ge</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 &gt;= ?arg2.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&gt;=</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="hasArgument">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >has argument</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Checks if a given module class (?module) has at least one declared spl:Argument.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The module class to check.</rdfs:comment>
        <spl:valueType rdf:resource="http://spinrdf.org/spin#Module"/>
        <spl:predicate rdf:resource="#class"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >class</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >superClass</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >superClass</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#constraint"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >con</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >con</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="#Argument"/>
          </rdf:Description>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:ID="subject">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >subject</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the "first" subject of a given predicate (?arg1)/object (?arg2) combination. Note that if multiple values are present then the result might be unpredictably random.</rdfs:comment>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The object.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The predicate.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >subject</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </rdf:Description>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >subject</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#isURI">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isURI</rdfs:label>
    <rdfs:comment>Checks whether a node is a URI.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isURI</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the node to check</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#hours">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >hours</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the hours from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >hours</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The dateTime or time argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-instanceOf-typedString">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <sp:arg1 rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >test</sp:arg1>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#unaryPlus">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >unary plus</rdfs:label>
    <rdfs:comment>Returns the operand ?arg1 with the sign unchanged. Semantically, this operation performs no operation.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >+</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#minutes">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >minutes</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the minutes from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >minutes</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The dateTime or time argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#replace">
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The replacement string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The pattern to replace.
</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Replaces each non-overlapping occurrence of a regular expression pattern with a replacement string. Regular expession matching may involve modifier flags.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Additional flags for the replacement.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg4"/>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-replace"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >replace</rdfs:label>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >REPLACE</spin:symbol>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#notIn">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOT IN</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Checks whether the value on the left (?arg1) is none of the values on the right (?arg2, ?arg3 ...).</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOT IN</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The value to find.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#strafter">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-strafter"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strafter</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns a literal of the same kind (simple literal, plain literal same language tag, xsd:string) as the first argument arg1. The lexical form of the result is the substring of the value of arg1 that proceeds in arg1 the first occurrence of the lexical form of arg2; otherwise the lexical form of the result is the empty string. If the lexical form of arg2 is the empty string, the lexical form of the result is the emprty string.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRAFTER</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The pattern to find within the input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#sha384">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-sha384"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sha384</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the SHA384 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SHA384</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input literal.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#lang">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >lang</rdfs:label>
    <rdfs:comment>Returns the language tag of ?arg1, if it has one. It returns "" if the literal has no language tag. Node that the RDF data model does not include literals with an empty language tag.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >lang</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the literal to get the language of</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#md5">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-md5"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >md5</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the MD5 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >MD5</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input literal.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#sha256">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-sha256"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sha256</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the SHA256 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SHA256</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input literal.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#strbefore">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-strbefore"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strbefore</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns a literal of the same kind (simple literal, plain literal same language tag, xsd:string) as the first argument arg1. The lexical form of the result is the substring of the value of arg1 that precedes in arg1 the first occurrence of the lexical form of arg2; otherwise the lexical form of the result is the empty string. If the lexical form of arg2 is the empty string, the lexical form of the result is the emprty string.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRBEFORE</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The pattern to find within the input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="ExistencePropertyPairConstraint">
    <rdfs:subClassOf>
      <spl:ConstraintTemplate rdf:ID="PropertyPairConstraintTemplates">
        <rdfs:subClassOf rdf:resource="#PropertyConstraintTemplates"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Property pair constraint templates</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Abstract base class for templates that take two properties as arguments and establish a relationship between them.</rdfs:comment>
        <spin:constraint>
          <spl:Argument>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >The "other" property.</rdfs:comment>
            <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
            <spl:predicate rdf:resource="http://spinrdf.org/arg#otherProperty"/>
          </spl:Argument>
        </spin:constraint>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spl:ConstraintTemplate>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Existence property pair constraint</rdfs:label>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The property {?property} must have a value whenever {?otherProperty} has a value</spin:labelTemplate>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <sp:Filter>
            <sp:expression>
              <sp:exists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                    <sp:predicate rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >otherProperty</sp:varName>
                    </sp:predicate>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >someValue</sp:varName>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:exists>
            </sp:expression>
          </sp:Filter>
          <sp:Filter>
            <sp:expression>
              <sp:notExists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                    <sp:predicate rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >property</sp:varName>
                    </sp:predicate>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >object</sp:varName>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:notExists>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg3> has</sp:arg3>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >otherProperty</sp:varName>
                </sp:arg2>
                <sp:arg1>Property must have a value because </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A3"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A3"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A3"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A3"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spl:ConstraintTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#strlang">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-strlang"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strlang</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Takes a string (?arg1) and a language (?arg2) and constructs a literal with a corresponding language tag.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRLANG</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The language tag, e.g. "en-AU".</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The string value.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#lcase">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-lcase"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >LCASE</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Converts a string to lower case characters.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >LCASE</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-instanceOf-typedString-false">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >false</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
        <sp:arg1 rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >test</sp:arg1>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#uri">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >URI</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Equivalent to IRI.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >URI</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The IRI string to convert to a resource.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#le">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >le</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 &lt;= ?arg2.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&lt;=</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#bnode">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-bnode"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >bnode</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Constructs a blank node that is distinct from all blank nodes in the dataset being queried and distinct from all blank nodes created by calls to this constructor for other query solutions. If the no argument form is used, every call results in a distinct blank node. If the form with a simple literal is used, every call results in distinct blank nodes for different simple literals, and the same blank node for calls with the same simple literal within expressions for one solution mapping. This functionality is compatible with the treatment of blank nodes in SPARQL CONSTRUCT templates.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >BNODE</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A literal input node.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="min">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >min</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Takes two arguments and returns the smaller one of them.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The second argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The first argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >result</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:if>
                <sp:arg3 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                <sp:arg1>
                  <sp:lt>
                    <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                  </sp:lt>
                </sp:arg1>
              </sp:if>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >result</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#struuid">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >struuid</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns a string that is the scheme specific part of UUID. That is, as a simple literal, the result of generating a UUID, converting to a simple literal and removing the initial urn:uuid:.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRUUID</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </spin:Function>
  <spin:Function rdf:ID="max">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >max</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Takes two arguments and returns the larger one of them.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The second argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The first argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >result</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:if>
                <sp:arg3 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                <sp:arg1>
                  <sp:gt>
                    <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                  </sp:gt>
                </sp:arg1>
              </sp:if>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >result</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#seconds">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >seconds</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the seconds from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >seconds</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The dateTime or time argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="subPropertyOf">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sub property of</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Checks whether a given property (?arg1) is a (transitive) sub-property of another property (?arg2).</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The potential super-property.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The potential sub-property.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </sp:TriplePath>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="RangePropertyConstraint">
    <rdfs:subClassOf rdf:resource="#PropertyConstraintTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Range property constraint</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Represents a constraint that narrows down a property by a minimum and maximum value compared by &lt;= and &gt;=.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Values of {?property} must be within the interval [ {?min} , {?max} ]</spin:labelTemplate>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The minimum value.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/arg#min"/>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The maximum value.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/arg#max"/>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >object</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Filter>
            <sp:expression>
              <sp:or>
                <sp:arg2>
                  <sp:and>
                    <sp:arg2>
                      <sp:gt>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >max</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >object</sp:varName>
                        </sp:arg1>
                      </sp:gt>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >max</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:and>
                </sp:arg2>
                <sp:arg1>
                  <sp:and>
                    <sp:arg2>
                      <sp:lt>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >min</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >object</sp:varName>
                        </sp:arg1>
                      </sp:lt>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >min</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:and>
                </sp:arg1>
              </sp:or>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg7>]</sp:arg7>
                <sp:arg6 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >max</sp:varName>
                </sp:arg6>
                <sp:arg5>, </sp:arg5>
                <sp:arg4 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >min</sp:varName>
                </sp:arg4>
                <sp:arg3> must be in the interval [</sp:arg3>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >object</sp:varName>
                </sp:arg2>
                <sp:arg1>Value </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A4"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A4"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A4"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A4"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
    <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spin:abstract>
  </spl:ConstraintTemplate>
  <spin:Function rdf:ID="subClassOf">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sub class of</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Checks whether a given class (?arg1) is a (transitive) sub-class of another class (?arg2).</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The potential super-class.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The potential sub-class.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </sp:TriplePath>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#divide">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >divide</rdfs:label>
    <rdfs:comment>Returns the arithmetic quotient of its operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >/</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#isNumeric">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-isNumeric"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >is numeric</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns true if arg1 is a numeric value. Returns false otherwise. term is numeric if it has an appropriate datatype (see the section Operand Data Types) and has a valid lexical form, making it a valid argument to functions and operators taking numeric arguments.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isNumeric</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The node to check whether it's numeric.
</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#day">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >day</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the day from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >day</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The date or dateTime argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="ObjectCountPropertyConstraint">
    <rdfs:subClassOf>
      <spl:ConstraintTemplate rdf:ID="CountPropertyConstraintTemplates">
        <rdfs:subClassOf rdf:resource="#PropertyConstraintTemplates"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Count property constraint templates</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >Abstract superclass of property constraints that compare the number of values with either min or max count.</rdfs:comment>
        <spin:constraint>
          <spl:Argument>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >The minimum number of values that the property must have.</rdfs:comment>
            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
            <spl:predicate rdf:resource="http://spinrdf.org/arg#minCount"/>
            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
            >true</spl:optional>
          </spl:Argument>
        </spin:constraint>
        <spin:constraint>
          <spl:Argument>
            <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >The maximum number of values that the property must have.</rdfs:comment>
            <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
            <spl:predicate rdf:resource="http://spinrdf.org/arg#maxCount"/>
            <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
            >true</spl:optional>
          </spl:Argument>
        </spin:constraint>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spl:ConstraintTemplate>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Object count property constraint</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Represents a constraint that can be attached to a class to specify that a given property must have between min and max values.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The property {?property} must have between {?minCount} and {?maxCount} values</spin:labelTemplate>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >objectCount</sp:varName>
            </sp:variable>
            <sp:expression>
              <spl:objectCount>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >property</sp:varName>
                </sp:arg2>
                <sp:arg1 rdf:resource="http://spinrdf.org/spin#_this"/>
              </spl:objectCount>
            </sp:expression>
          </sp:Bind>
          <sp:Filter>
            <sp:expression>
              <sp:or>
                <sp:arg2>
                  <sp:and>
                    <sp:arg2>
                      <sp:gt>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >maxCount</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >objectCount</sp:varName>
                        </sp:arg1>
                      </sp:gt>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >maxCount</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:and>
                </sp:arg2>
                <sp:arg1>
                  <sp:and>
                    <sp:arg2>
                      <sp:lt>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >minCount</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >objectCount</sp:varName>
                        </sp:arg1>
                      </sp:lt>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >minCount</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:and>
                </sp:arg1>
              </sp:or>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >objectCount</sp:varName>
                </sp:arg2>
                <sp:arg1>Invalid number of values: </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A5"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A5"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A5"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A5"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spl:ConstraintTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#unaryMinus">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >unary minus</rdfs:label>
    <rdfs:comment>Returns the operand ?arg1 with the sign reversed. If ?arg1 is positive, its negative is returned; if it is negative, its positive is returned.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >-</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#iri">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IRI</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Creates a IRI resource (node) from a given IRI string (?arg1).</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IRI</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The IRI string to convert to a resource.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="UntypedObjectPropertyConstraint">
    <rdfs:subClassOf rdf:resource="#PropertyConstraintTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Untyped object property constraint</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >A generic SPIN template that can be used to declare a constraint that all values of a given property must have an rdf:type.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Values of {?property} must have a type</spin:labelTemplate>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >object</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Filter>
            <sp:expression>
              <sp:notExists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >object</sp:varName>
                    </sp:subject>
                    <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >anyType</sp:varName>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:notExists>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg3> must have a type</sp:arg3>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >object</sp:varName>
                </sp:arg2>
                <sp:arg1>Value </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A6"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A6"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A6"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A6"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spl:ConstraintTemplate>
  <spl:TestCase rdf:ID="Test-instanceOf-rdfsLiteral">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <sp:arg1 rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >test</sp:arg1>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spl:TestCase rdf:ID="Test-instanceOf-rdfsClass">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <sp:arg1 rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#month">
    <rdfs:subClassOf rdf:resource="#DateFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >month</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Extracts the month from a date/time literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >month</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The date or dateTime argument.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#encode_for_uri">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >encode_for_uri</rdfs:label>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ENCODE_FOR_URI</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The string to convert.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-object-labelOfArgument">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Argument</spl:testResult>
    <spl:testExpression>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:NamedGraph>
            <sp:graphNameNode rdf:resource=""/>
            <sp:elements rdf:parseType="Collection">
              <sp:Bind>
                <sp:variable rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >value</sp:varName>
                </sp:variable>
                <sp:expression>
                  <spl:object>
                    <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
                    <sp:arg1 rdf:resource="#Argument"/>
                  </spl:object>
                </sp:expression>
              </sp:Bind>
            </sp:elements>
          </sp:NamedGraph>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >value</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#ucase">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-ucase"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >UCASE</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Converts a string to upper case characters.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >UCASE</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#mul">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >mul</rdfs:label>
    <rdfs:comment>Returns the arithmetic product of its operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >*</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:ConstructTemplate rdf:ID="ConstructDefaultValues">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#ConstructTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Construct default values</rdfs:label>
    <rdfs:comment>This template can be attached as spin:constructor to a root class such as rdfs:Resource to ensure that SPIN processors assign default values to certain properties. Looks for any templates attached as spin:constraints to the types of ?this and then assigns their declared spl:defaultValues.</rdfs:comment>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Construct default values</spin:labelTemplate>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >directType</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >directType</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >type</sp:varName>
            </sp:object>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >type</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#constraint"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >attribute</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >attribute</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="#defaultValue"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >defaultValue</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >attribute</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="#predicate"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >predicate</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >predicate</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >defaultValue</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spin:ConstructTemplate>
  <spin:SelectTemplate rdf:ID="RunTestCases">
    <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#SelectTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Run test cases</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Runs all spl:TestCases on the current model.</rdfs:comment>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >testCase</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="#testExpression"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >expr</sp:varName>
            </sp:object>
          </rdf:Description>
          <sp:Optional>
            <sp:elements rdf:parseType="Collection">
              <rdf:Description>
                <sp:subject rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >testCase</sp:varName>
                </sp:subject>
                <sp:predicate rdf:resource="#testResult"/>
                <sp:object rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >expected</sp:varName>
                </sp:object>
              </rdf:Description>
            </sp:elements>
          </sp:Optional>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >actual</sp:varName>
            </sp:variable>
            <sp:expression>
              <spin:eval>
                <sp:arg1 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >expr</sp:varName>
                </sp:arg1>
              </spin:eval>
            </sp:expression>
          </sp:Bind>
          <sp:Filter>
            <sp:expression>
              <sp:or>
                <sp:arg2>
                  <sp:and>
                    <sp:arg2>
                      <sp:ne>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >expected</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >actual</sp:varName>
                        </sp:arg1>
                      </sp:ne>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >expected</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:and>
                </sp:arg2>
                <sp:arg1>
                  <sp:ne>
                    <sp:arg2>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >actual</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:bound>
                        <sp:arg1 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >expected</sp:varName>
                        </sp:arg1>
                      </sp:bound>
                    </sp:arg1>
                  </sp:ne>
                </sp:arg1>
              </sp:or>
            </sp:expression>
          </sp:Filter>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >testCase</sp:varName>
          </rdf:Description>
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >expected</sp:varName>
          </rdf:Description>
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >actual</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:SelectTemplate>
  <spl:TestCase rdf:ID="Test-instanceOf-rdfsClass-false">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >false</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <sp:arg1 rdf:resource="http://www.w3.org/2002/07/owl#versionInfo"/>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:about="http://spinrdf.org/sp#substr">
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The start index.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the sub-string of a given string. The index of the first character is 1.</rdfs:comment>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The end index.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
        <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spl:optional>
      </spl:Argument>
    </spin:constraint>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >substr</rdfs:label>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SUBSTR</spin:symbol>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-substr"/>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
  </spin:Function>
  <spl:TestCase rdf:ID="Test-instanceOf-rdfsLiteral-false">
    <spl:testResult rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >false</spl:testResult>
    <spl:testExpression>
      <spl:instanceOf>
        <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <sp:arg1 rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
      </spl:instanceOf>
    </spl:testExpression>
  </spl:TestCase>
  <spin:Function rdf:ID="objectSubProp">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >object sub prop</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the object of a given subject (?arg1) / predicate (?arg2) combination, also taking the sub-properties of ?arg2 into account. Note that if multiple values are present then the result might be unpredictably random.</rdfs:comment>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The predicate to get the object of (including sub-properties of it).</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The subject to get the object from.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <sp:TriplePath>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:subject>
            <sp:path>
              <sp:ModPath>
                <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
                <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >0</sp:modMin>
                <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
                >-2</sp:modMax>
              </sp:ModPath>
            </sp:path>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </sp:TriplePath>
          <rdf:Description>
            <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:predicate rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:predicate>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >object</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >object</sp:varName>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#sub">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sub</rdfs:label>
    <rdfs:comment>Returns the arithmetic difference of its operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >-</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="subjectCount">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >subjectCount</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the number of values of a given property (?arg1) at a given object (?arg2). The result is the number of matches of (?subject, ?arg1, ?arg2).</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the object to get the number of subjects of</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >the predicate to get the number of subjects of</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Select>
        <sp:where rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >subject</sp:varName>
            </sp:subject>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#_arg1"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
          </rdf:Description>
        </sp:where>
        <sp:resultVariables rdf:parseType="Collection">
          <rdf:Description>
            <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >result</sp:varName>
            <sp:expression>
              <sp:Count>
                <sp:expression rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >subject</sp:varName>
                </sp:expression>
              </sp:Count>
            </sp:expression>
          </rdf:Description>
        </sp:resultVariables>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spl:ConstraintTemplate rdf:ID="NonExistencePropertyPairConstraint">
    <rdfs:subClassOf rdf:resource="#PropertyPairConstraintTemplates"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Non-existence property pair constraint</rdfs:label>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The property {?property} must have no values as long as {?otherProperty} has none</spin:labelTemplate>
    <spin:body>
      <sp:Construct>
        <sp:where rdf:parseType="Collection">
          <sp:Filter>
            <sp:expression>
              <sp:notExists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                    <sp:predicate rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >otherProperty</sp:varName>
                    </sp:predicate>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >someValue</sp:varName>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:notExists>
            </sp:expression>
          </sp:Filter>
          <sp:Filter>
            <sp:expression>
              <sp:exists>
                <sp:elements rdf:parseType="Collection">
                  <rdf:Description>
                    <sp:subject rdf:resource="http://spinrdf.org/spin#_this"/>
                    <sp:predicate rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >property</sp:varName>
                    </sp:predicate>
                    <sp:object rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >object</sp:varName>
                    </sp:object>
                  </rdf:Description>
                </sp:elements>
              </sp:exists>
            </sp:expression>
          </sp:Filter>
          <sp:Bind>
            <sp:variable rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:variable>
            <sp:expression>
              <sp:concat>
                <sp:arg3> has none</sp:arg3>
                <sp:arg2 rdf:parseType="Resource">
                  <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                  >otherProperty</sp:varName>
                </sp:arg2>
                <sp:arg1>Property must have no values because </sp:arg1>
              </sp:concat>
            </sp:expression>
          </sp:Bind>
        </sp:where>
        <sp:templates rdf:parseType="Collection">
          <rdf:Description>
            <sp:subject rdf:nodeID="A7"/>
            <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#ConstraintViolation"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A7"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationRoot"/>
            <sp:object rdf:resource="http://spinrdf.org/spin#_this"/>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A7"/>
            <sp:predicate rdf:resource="http://spinrdf.org/spin#violationPath"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >property</sp:varName>
            </sp:object>
          </rdf:Description>
          <rdf:Description>
            <sp:subject rdf:nodeID="A7"/>
            <sp:predicate rdf:resource="http://www.w3.org/2000/01/rdf-schema#label"/>
            <sp:object rdf:parseType="Resource">
              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
              >message</sp:varName>
            </sp:object>
          </rdf:Description>
        </sp:templates>
      </sp:Construct>
    </spin:body>
  </spl:ConstraintTemplate>
  <spin:Function rdf:about="http://spinrdf.org/sp#abs">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-abs"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >abs</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the absolute value of arg. An error is raised if arg is not a numeric value.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >abs</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input value.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#add">
    <rdfs:subClassOf rdf:resource="#MathematicalFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >add</rdfs:label>
    <rdfs:comment>Returns the arithmetic sum of its operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >+</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second number</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first number</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#sha512">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-sha512"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sha512</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns the SHA512 checksum, as a hex digit string, calculated on the UTF-8 representation of the simple literal or lexical form of the xsd:string. Hex digits SHOULD be in lower case.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >SHA512</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input literal.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#UUID">
    <rdfs:subClassOf>
      <spin:Function rdf:ID="URIFunctions">
        <rdfs:subClassOf rdf:resource="http://spinrdf.org/spin#Functions"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >URI functions</rdfs:label>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A collection of functions that create URI resources.</rdfs:comment>
        <spin:abstract rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</spin:abstract>
      </spin:Function>
    </rdfs:subClassOf>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >UUID</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns a fresh IRI from the UUID URN scheme. Each call of UUID() returns a different UUID. It must not be the "nil" UUID (all zeroes). The variant and version of the UUID is implementation dependent.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >UUID</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#langMatches">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >langMatches</rdfs:label>
    <rdfs:comment>Returns true if language-tag (first argument) matches language-range (second argument) per the basic filtering scheme defined in [RFC4647] section 3.3.1.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >langMatches</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the language tag that ?arg1 must have</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the literal that is expected to have ?arg2 as language tag</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#strdt">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-strdt"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >strdt</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Constructs a literal with lexical form and type as specified by the arguments.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >STRDT</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The datatype of the new literal.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Datatype"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The lexical form of the new literal.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#contains">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-contains"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >contains</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns an xsd:boolean indicating whether or not the value of ?arg1 contains (at the beginning, at the end, or anywhere within) at least one sequence of collation units that provides a minimal match to the collation units in the value of ?arg2, according to the collation that is used.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >CONTAINS</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The sub-string to search for in the input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The input string.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="isUntypedLiteral">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isUntypedLiteral</rdfs:label>
    <rdfs:comment>Checks whether a given literal is untyped. This function was introduced because the built-in datatype operand in SPARQL casts untyped literals to xsd:string, making it impossible to check it this way. This function here uses a work-around using sameTerm instead.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The literal to test.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:Filter>
            <sp:expression>
              <sp:and>
                <sp:arg2>
                  <sp:not>
                    <sp:arg1>
                      <sp:sameTerm>
                        <sp:arg2>
                          <xsd:string>
                            <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                          </xsd:string>
                        </sp:arg2>
                        <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                      </sp:sameTerm>
                    </sp:arg1>
                  </sp:not>
                </sp:arg2>
                <sp:arg1>
                  <sp:isLiteral>
                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                  </sp:isLiteral>
                </sp:arg1>
              </sp:and>
            </sp:expression>
          </sp:Filter>
        </sp:where>
      </sp:Ask>
    </spin:body>
  </spin:Function>
  <sp:isIRI rdf:nodeID="A8">
    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
  </sp:isIRI>
  <spl:Argument rdf:nodeID="A9">
    <rdfs:comment>the input string</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <rdf:Description rdf:about="http://spinrdf.org/spin#eval">
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The expression to evaluate. Should be a sp:Select, sp:Ask, a sp:Variable or an instance of a SPARQL function class, but may also be a simple RDF value.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </rdf:Description>
  <sp:eq rdf:nodeID="A10">
    <sp:arg2 rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg2"/>
  </sp:eq>
  <spin:Function rdf:about="http://spinrdf.org/sp#if">
    <rdfs:subClassOf rdf:resource="#MiscFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IF</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The SPARQL 1.1 built-in function IF.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >IF</spin:symbol>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The function result if ?arg1 is false.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >The function result if ?arg1 is true.</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >A condition to evaluate - if true then the ?arg2 will be returned, otherwise ?arg3.</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:Argument rdf:nodeID="A11">
    <rdfs:comment>the second operand</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <sp:TriplePath rdf:nodeID="A12">
    <sp:subject rdf:parseType="Resource">
      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
      >class</sp:varName>
    </sp:subject>
    <sp:path>
      <sp:ModPath>
        <sp:subPath rdf:resource="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
        <sp:modMin rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
        >0</sp:modMin>
        <sp:modMax rdf:datatype="http://www.w3.org/2001/XMLSchema#integer"
        >-2</sp:modMax>
      </sp:ModPath>
    </sp:path>
    <sp:object rdf:resource="http://spinrdf.org/spin#_arg2"/>
  </sp:TriplePath>
  <rdf:Description rdf:nodeID="A13">
    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >object</sp:varName>
  </rdf:Description>
  <spl:Argument rdf:nodeID="A14">
    <rdfs:comment>the first operand</rdfs:comment>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A15">
    <rdfs:comment>the second operand</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <rdf:Description rdf:nodeID="A16">
    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    <rdf:first>
      <sp:Filter>
        <sp:expression>
          <sp:or>
            <sp:arg2>
              <sp:and>
                <sp:arg2>
                  <sp:eq>
                    <sp:arg2 rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
                    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                  </sp:eq>
                </sp:arg2>
                <sp:arg1>
                  <sp:or>
                    <sp:arg2>
                      <sp:eq>
                        <sp:arg2 rdf:parseType="Resource">
                          <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                          >datatype</sp:varName>
                        </sp:arg2>
                        <sp:arg1 rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"/>
                      </sp:eq>
                    </sp:arg2>
                    <sp:arg1>
                      <sp:not>
                        <sp:arg1>
                          <sp:bound>
                            <sp:arg1 rdf:parseType="Resource">
                              <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                              >datatype</sp:varName>
                            </sp:arg1>
                          </sp:bound>
                        </sp:arg1>
                      </sp:not>
                    </sp:arg1>
                  </sp:or>
                </sp:arg1>
              </sp:and>
            </sp:arg2>
            <sp:arg1>
              <sp:or>
                <sp:arg2 rdf:nodeID="A10"/>
                <sp:arg1>
                  <sp:eq>
                    <sp:arg2 rdf:resource="http://spinrdf.org/spin#_arg2"/>
                    <sp:arg1 rdf:parseType="Resource">
                      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                      >datatype</sp:varName>
                    </sp:arg1>
                  </sp:eq>
                </sp:arg1>
              </sp:or>
            </sp:arg1>
          </sp:or>
        </sp:expression>
      </sp:Filter>
    </rdf:first>
  </rdf:Description>
  <sp:datatype rdf:nodeID="A17">
    <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
  </sp:datatype>
  <rdf:Description rdf:nodeID="A18">
    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    <rdf:first rdf:parseType="Resource">
      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
      >object</sp:varName>
    </rdf:first>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A19">
    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >class</sp:varName>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A20">
    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    <rdf:first rdf:parseType="Resource">
      <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
      <sp:predicate rdf:resource="http://spinrdf.org/spin#_arg2"/>
      <sp:object rdf:parseType="Resource">
        <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >object</sp:varName>
      </sp:object>
    </rdf:first>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A21">
    <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >object</sp:varName>
  </rdf:Description>
  <rdf:Description rdf:nodeID="A22">
    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    <rdf:first rdf:parseType="Resource">
      <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
      >result</sp:varName>
      <sp:expression>
        <sp:Count>
          <sp:expression rdf:nodeID="A21"/>
        </sp:Count>
      </sp:expression>
    </rdf:first>
  </rdf:Description>
  <spl:Argument rdf:nodeID="A23">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The predicate to get the object of.</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <rdf:Description rdf:nodeID="A24">
    <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    <rdf:first rdf:parseType="Resource">
      <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
      <sp:predicate rdf:resource="http://spinrdf.org/spin#_arg2"/>
      <sp:object rdf:nodeID="A13"/>
    </rdf:first>
  </rdf:Description>
  <spl:Argument rdf:nodeID="A25">
    <rdfs:comment>the node being checked</rdfs:comment>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#not">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >not</rdfs:label>
    <rdfs:comment>Returns the boolean negation of the argument.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >!</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the operand to negate</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="instanceOf">
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Note that in TopBraid this function has been implemented in native Java code, for performance reasons.</owl:versionInfo>
    <spin:body>
      <sp:Ask>
        <sp:where rdf:parseType="Collection">
          <sp:Union>
            <sp:elements rdf:parseType="Collection">
              <rdf:Description>
                <rdf:rest rdf:parseType="Collection">
                  <sp:TriplePath rdf:nodeID="A12"/>
                  <rdf:Description>
                    <sp:subject rdf:resource="http://spinrdf.org/spin#_arg1"/>
                    <sp:predicate rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
                    <sp:object rdf:nodeID="A19"/>
                  </rdf:Description>
                </rdf:rest>
                <rdf:first rdf:parseType="Collection">
                  <sp:Filter>
                    <sp:expression>
                      <sp:or>
                        <sp:arg2>
                          <sp:isBlank>
                            <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                          </sp:isBlank>
                        </sp:arg2>
                        <sp:arg1 rdf:nodeID="A8"/>
                      </sp:or>
                    </sp:expression>
                  </sp:Filter>
                </rdf:first>
              </rdf:Description>
              <rdf:Description>
                <rdf:rest rdf:parseType="Resource">
                  <rdf:rest rdf:nodeID="A16"/>
                  <rdf:first>
                    <sp:Bind>
                      <sp:variable rdf:parseType="Resource">
                        <sp:varName rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
                        >datatype</sp:varName>
                      </sp:variable>
                      <sp:expression rdf:nodeID="A17"/>
                    </sp:Bind>
                  </rdf:first>
                </rdf:rest>
                <rdf:first rdf:parseType="Collection">
                  <sp:Filter>
                    <sp:expression>
                      <sp:isLiteral>
                        <sp:arg1 rdf:resource="http://spinrdf.org/spin#_arg1"/>
                      </sp:isLiteral>
                    </sp:expression>
                  </sp:Filter>
                </rdf:first>
              </rdf:Description>
            </sp:elements>
          </sp:Union>
        </sp:where>
      </sp:Ask>
    </spin:body>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the type that the instance must have</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <rdfs:comment>Checks whether a given resource (?arg1) has a given type (?arg2). In order to fulfill this condition, there must either be a triple ?arg1 rdf:type ?arg2, or ?instance rdf:type ?subClass where ?subClass is a subclass of ?arg2. If the first argument is a literal, then the second argument must be the matching XSD datatype.</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:labelTemplate rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >{?arg1} instance of {?arg2}</spin:labelTemplate>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the instance being tested</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >instanceOf</rdfs:label>
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
  </spin:Function>
  <sp:Select rdf:nodeID="A26">
    <sp:where rdf:nodeID="A20"/>
    <sp:resultVariables rdf:nodeID="A18"/>
  </sp:Select>
  <spl:Argument rdf:nodeID="A27">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The subject to get the object from.</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A28">
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >the subject to get the number of objects of</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#lt">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >lt</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 &lt; ?arg2.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&lt;</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A11"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#eq">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >eq</rdfs:label>
    <rdfs:comment>Returns true if both arguments are equal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >=</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second value to compare</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first value to compare</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#notExists">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOT EXISTS</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The filter function NOT EXISTS. The graph pattern is stored in sp:elements.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >NOT EXISTS</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#concat">
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >concat</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The CONCAT built-in function. Creates a single string by concatenating all arguments from left to right. Note that if any one of the arguments is unbound (null) then the whole result string will be unbound.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >CONCAT</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
  </spin:Function>
  <spl:Argument rdf:nodeID="A29">
    <rdfs:comment>the node being tested</rdfs:comment>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A30">
    <rdfs:comment>the first operand</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#isIRI">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isIRI</rdfs:label>
    <rdfs:comment>Checks whether a given node is a IRI node.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isIRI</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the node being tested</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:Argument rdf:nodeID="A31">
    <rdfs:comment>the first operand of the intersection</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A32">
    <rdfs:comment>the property to get the number of values of</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A33">
    <rdfs:comment>the first argument</rdfs:comment>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#datatype">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >datatype</rdfs:label>
    <rdfs:comment>Returns the datatype IRI of argument ?arg1; returns xsd:string if the parameter is a simple literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >datatype</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Class"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the literal to get the datatype of</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2000/01/rdf-schema#Literal"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#gt">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >gt</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 &gt; arg2.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&gt;</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A15"/>
    <spin:constraint rdf:nodeID="A30"/>
  </spin:Function>
  <spl:Argument rdf:nodeID="A34">
    <rdfs:comment>the flags</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg3"/>
    <spl:optional rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
    >true</spl:optional>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#ne">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >ne</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 != ?arg2.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >!=</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the second operand</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
      </spl:Argument>
    </spin:constraint>
    <spin:constraint rdf:nodeID="A14"/>
  </spin:Function>
  <spin:Function rdf:ID="object">
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Note that in TopBraid this function has been implemented in native Java code, for performance reasons.</owl:versionInfo>
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >object</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Gets the object of a given subject (?arg1) / predicate (?arg2) combination. Note that if multiple values are present then the result might be unpredictably random.</rdfs:comment>
    <spin:constraint rdf:nodeID="A23"/>
    <spin:constraint rdf:nodeID="A27"/>
    <spin:body rdf:nodeID="A26"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#bound">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >bound</rdfs:label>
    <rdfs:comment>Returns true if ?arg1 is bound to a value. Returns false otherwise. Variables with the value NaN or INF are considered bound.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >bound</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the variable or expression that is checked</rdfs:comment>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spin:Function rdf:ID="objectCount">
    <rdfs:subClassOf rdf:resource="#OntologyFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >objectCount</rdfs:label>
    <rdfs:comment>Gets the number of values of a given property (?arg2) at a given subject (?arg1). The result is the number of matches of (?arg1, ?arg2, ?object).</rdfs:comment>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#integer"/>
    <spin:constraint rdf:nodeID="A32"/>
    <spin:constraint rdf:nodeID="A28"/>
    <spin:body>
      <sp:Select>
        <sp:where rdf:nodeID="A24"/>
        <sp:resultVariables rdf:nodeID="A22"/>
      </sp:Select>
    </spin:body>
  </spin:Function>
  <spl:Argument rdf:nodeID="A35">
    <rdfs:comment>the match pattern</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <spl:Argument rdf:nodeID="A36">
    <rdfs:comment>the second operand of the intersection</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#regex">
    <spin:constraint rdf:nodeID="A9"/>
    <rdfs:comment>Returns true if a string (?arg1) matches the regular expression supplied as a pattern (?arg2) as influenced by the value of flags (?arg3), otherwise returns false.</rdfs:comment>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-regex"/>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A34"/>
    <rdfs:subClassOf rdf:resource="#StringFunctions"/>
    <spin:constraint rdf:nodeID="A35"/>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >regex</spin:symbol>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >regex</rdfs:label>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#and">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >and</rdfs:label>
    <rdfs:comment>Return the logical AND between two (boolean) operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >&amp;&amp;</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A36"/>
    <spin:constraint rdf:nodeID="A31"/>
  </spin:Function>
  <spl:Argument rdf:nodeID="A37">
    <rdfs:comment>the second operand</rdfs:comment>
    <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#isBlank">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isBlank</rdfs:label>
    <rdfs:comment>Checks whether a given node is a blank node.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isBlank</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A25"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#or">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >or</rdfs:label>
    <rdfs:comment>Returns the logical OR between two (boolean) operands.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >||</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A37"/>
    <spin:constraint>
      <spl:Argument>
        <rdfs:comment>the first operand</rdfs:comment>
        <spl:valueType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
        <spl:predicate rdf:resource="http://spinrdf.org/sp#arg1"/>
      </spl:Argument>
    </spin:constraint>
  </spin:Function>
  <spl:Argument rdf:nodeID="A38">
    <rdfs:comment>the second argument</rdfs:comment>
    <spl:predicate rdf:resource="http://spinrdf.org/sp#arg2"/>
  </spl:Argument>
  <spin:Function rdf:about="http://spinrdf.org/sp#sameTerm">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:seeAlso rdf:resource="http://www.w3.org/TR/sparql11-query/#func-sameTerm"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >same term</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >Returns TRUE if ?arg1 and ?arg2 are the same RDF term as defined in Resource Description Framework (RDF): Concepts and Abstract Syntax; returns FALSE otherwise.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >sameTerm</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A38"/>
    <spin:constraint rdf:nodeID="A33"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#exists">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >EXISTS</rdfs:label>
    <rdfs:comment rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >The filter function EXISTS. The graph pattern is stored in sp:elements.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >EXISTS</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
  </spin:Function>
  <spin:Function rdf:about="http://spinrdf.org/sp#isLiteral">
    <rdfs:subClassOf rdf:resource="#BooleanFunctions"/>
    <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isLiteral</rdfs:label>
    <rdfs:comment>Checks whether a given node is a literal.</rdfs:comment>
    <spin:symbol rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >isLiteral</spin:symbol>
    <spin:returnType rdf:resource="http://www.w3.org/2001/XMLSchema#boolean"/>
    <spin:constraint rdf:nodeID="A29"/>
  </spin:Function>
</rdf:RDF>

<!-- Created with TopBraid -->
